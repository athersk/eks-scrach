storageclass.yaml
------------------
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ebs-sc
provisioner: ebs.csi.aws.com
volumeBindingMode: WaitForFirstConsumer
==============================================

persistantvolumeclaim.yaml
----------------------------
apiVersion: vl
kind: PersistentVolumeClaim 
metadata:
 name: ebs-mysql-pv-claim 
spec:
  accessModes:
  - ReadWriteOnce 
storageClassName: ebs-sc 
resources:
  requests:
    storage: 4Gi
==============================================

usermamgment-configMap.yaml
---------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: usermanagement-dbcreation-script 
data:
  mysql_usermgmt.sql: |-
    DROP DATABASE IF EXISTS usermgmt; 
    CREATE DATABASE usermgmt;

================================================

mysql-deployment.yaml
---------------------

apiVersion: apps/vl 
kind: Deployment 
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels: 
    app: mysql 
  strategy:
    type: Recreate 
  template:
    metadata:
     labels:
       app: mysql 
    spec:
      containers:
       - name: mysql
         image: mysq1:5.6
         env:
            - name: MYSQL_ROOT_PASSWORD
              value: dbpasswordll
        ports:
         - containerPort: 3306
          name: mysql
        volumeMounts:
          - name: mysql-persistent-storage
            mountPath: /var/lib/mysql
          - name: usermanagement-dbcreation-script
            mountPath: /docker-entrypoint-initdb.d #https:./hJb.docker.com/_'mysal Refer Initializing a fresh instance
     volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
        claimName: ebs-mysql-pv-claim 
      - name: usermanagement-dbcreation-script
        configMap:
         name: usermanagement-dbcreation-script
=======================================

mysql-cluster-serviceip.yml
---------------------------

apiVersion: v1 
kind: Service 
metadata:
 name: mysql
spec:
 selector:
  app: mysql
ports:
- port: 3306
clusterIP: None # This means we are going to use Pod IP

===============================================================
usrmgmmicroservice-depSer.yml
----------------------------
apiVersion: apps/v1 
kind: Deployment 
metadata:
name: usermgmt-microservice
labels:
spec:
app: usermgmt-restapp
replicas: 1
selector:
matchLabels:
  app: usermgmt-restapp
template:
  metadata:
  labels:
  spec:
   app: usermgmt-restapp
   containers:
  name: usermgmt-restapp
image: stacksimplify/kube-usermanagement-microservice:1.0.0
ports:
containerPort: 8095
env:
- name: DB_HOSTNAME
  value: "mysql"
- name: DB_PORT
  value: "3306"
- name: DB_NAME
  value: "usermgmt"
- name: DB_USERNAME
  value: "root"
- name: DB_PASSWORD
  value: "dbpassword11"
=========================================================
usermanagmentMicroServiceDeployment.yaml
------------------------------------------

apiVersion: v1 
kind: Service 
metadata:
  name: usermgmt-restapp-service 
labels:
 app: usermgmt-restapp
spec:
type: NodePort
selector:
app: usermgmt-restapp
ports:
 - port: 8095
   targetPort: 8095
   nodePort: 31231
